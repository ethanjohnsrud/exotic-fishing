{"version":3,"sources":["assets/header.png","assets/footer.png","assets/equiptment.png","assets/Travel.png","assets/lodging.png","assets/frogFish.png","assets/octalizard.png","assets/seaCat.png","assets/man.png","assets/girl.png","assets/waders.png","Services.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Services","props","className","style","display","minHeight","justifyContent","alignItems","src","image","title","description","App","Header","margin","Travel","Lodging","Equipment","Girl","Waders","Man","frogFish","octaLizard","seaCat","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,iUCiB1BC,MAdjB,YAA+B,IAATC,EAAQ,oBAC1B,OACE,yBAAKC,UAAU,WACb,6BAASC,MAAO,CAACC,QAAS,OAAQC,UAAW,QAASC,eAAgB,SAAUC,WAAY,aAC5F,yBAAKC,IAAKP,EAAMQ,MAAOP,UAAU,WAEjC,2BAAOA,UAAU,YAAYD,EAAMS,OACnC,uBAAGR,UAAU,eACZD,EAAMU,eCsCAC,MA/Bf,WACE,OACE,yBAAKV,UAAU,OACb,yBAAKM,IAAKK,IAAQX,UAAU,WAC5B,yBAAKC,MAAO,CAACW,OAAQ,OACnB,2BAAOZ,UAAU,SAAjB,qBACA,6BAASA,UAAU,WACnB,kBAAC,EAAD,CAAUO,MAAOM,IAAQL,MAAM,SAASC,YAAY,8JACpD,kBAAC,EAAD,CAAUF,MAAOO,IAASN,MAAM,UAAUC,YAAY,2NACtD,kBAAC,EAAD,CAAUF,MAAOQ,IAAWP,MAAM,YAAYC,YAAY,kKAE1D,2BAAOT,UAAU,SAAjB,iBACA,6BAASA,UAAU,WACnB,kBAAC,EAAD,CAAUO,MAAOS,IAAMR,MAAM,SAASC,YAAY,iMAClD,kBAAC,EAAD,CAAUF,MAAOU,IAAQT,MAAM,OAAOC,YAAY,2IAClD,kBAAC,EAAD,CAAUF,MAAOW,IAAKV,MAAM,OAAOC,YAAY,kMAE/C,2BAAOT,UAAU,SAAjB,sBACA,6BAASA,UAAU,WACnB,kBAAC,EAAD,CAAUO,MAAOY,IAAUX,MAAM,qBAAqBC,YAAY,gIAClE,kBAAC,EAAD,CAAUF,MAAOa,IAAYZ,MAAM,aAAaC,YAAY,gHAC5D,kBAAC,EAAD,CAAUF,MAAOc,IAAQb,MAAM,UAAUC,YAAY,uHAGvD,yBAAKT,UAAU,UACX,yBAAKM,IAAKgB,IAAQtB,UAAU,cC/BlBuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.78c950c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.aeb616b2.png\";","module.exports = __webpack_public_path__ + \"static/media/footer.7c578e64.png\";","module.exports = __webpack_public_path__ + \"static/media/equiptment.62749f7f.png\";","module.exports = __webpack_public_path__ + \"static/media/Travel.4b412776.png\";","module.exports = __webpack_public_path__ + \"static/media/lodging.f534e3aa.png\";","module.exports = __webpack_public_path__ + \"static/media/frogFish.4f4f7e27.png\";","module.exports = __webpack_public_path__ + \"static/media/octalizard.56d0a530.png\";","module.exports = __webpack_public_path__ + \"static/media/seaCat.4956bdc7.png\";","module.exports = __webpack_public_path__ + \"static/media/man.6cb60ea5.png\";","module.exports = __webpack_public_path__ + \"static/media/girl.d4ab33d4.png\";","module.exports = __webpack_public_path__ + \"static/media/waders.6e444304.png\";","import React from 'react';\r\nimport './App.css';\r\n\r\nfunction Services({...props}) {\r\n    return (\r\n      <div className=\"service\">\r\n        <section style={{display: 'flex', minHeight: '400px', justifyContent: 'center', alignItems: 'flex-end'}}>\r\n        <img src={props.image} className='image'/>\r\n        </section>\r\n        <label className='subTitle'>{props.title}</label>\r\n        <p className='description'>\r\n        {props.description}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Services;","import React from 'react';\n\nimport Header from './assets/header.png';\nimport Footer from './assets/footer.png';\nimport Equipment from './assets/equiptment.png';\nimport Travel from './assets/Travel.png';\nimport Lodging from './assets/lodging.png';\nimport frogFish from './assets/frogFish.png';\nimport octaLizard from './assets/octalizard.png';\nimport seaCat from './assets/seaCat.png';\nimport Man from './assets/man.png';\nimport Girl from './assets/girl.png';\nimport Waders from './assets/waders.png';\n\nimport './App.css';\n\nimport Services from './Services';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <img src={Header} className='header'/>\n      <div style={{margin: '5%'}}>\n        <label className='title'>SERVICES PROVIDED</label>\n        <section className='section'>\n        <Services image={Travel} title='Travel' description='Rest at ease, our booking agency provides all the stages of travel to get you from your home to anywhere in the world, all included in our trip packages.'/>\n        <Services image={Lodging} title='Lodging' description=\"During your trip, whether its a week, month, or 6-month trip; you can be sure you\\'ll have a place to rest your head every night.  We provide comfortable heated cabins at most bases and tents for out in the field.\"/>\n        <Services image={Equipment} title='Equipment' description='Equipment is also provided, including camping gear, fishing gear, and of course food.  With that said, if you have a lucky rod, feel free to bring it along.'/>\n        </section>\n        <label className='title'>EXPERT GUIDES</label>\n        <section className='section'>\n        <Services image={Girl} title='Amanda' description='Amanda leads many of our rough terrain excursions through mountains, rainforest, and deep jungles.  Nothing is going to stop her from finding that untouched and unfished part of the world.'/>\n        <Services image={Waders} title='Carl' description='Carl is the fly fishing guide, hes toned his shills over the decades.   Hes an expert scouting the rivers and pulling in monster fish.'/>\n        <Services image={Man} title='Hank' description='Hank is an all around great fisherman and guide for all levels.  Hes caught everything from sharks, massive tuna, to good old lake bass.  With hank, youll be sure to have a terrific  time!'/>\n        </section>\n        <label className='title'>REMARKABLE CATCHES</label>\n        <section className='section'>\n        <Services image={frogFish} title='Red-Eyed Frog Fish' description='Found this full grown red eyed frog fish in the rivers of Costa Rica.  Remarkable colors of land and water coming together.'/>\n        <Services image={octaLizard} title='Octalizard' description='The octalizard is very deadly to the reefs of eastern australia.  This guy roams around devouring its prey.'/>\n        <Services image={seaCat} title='Sea Cat' description='The legends of the Sea Cat are true, weve seen a few in our travels, but this was the first we caught on camera.'/>\n        </section>\n      </div>\n      <div className='footer'>\n          <img src={Footer} className='footer'/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}